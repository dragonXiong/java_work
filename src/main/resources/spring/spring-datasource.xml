<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<!-- 不用配置driverclass,下面的pagehelper分页插件也不用配置数据库方言 ,会根据url自动识别-->
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${db.jdbcurl}" />
		<property name="username" value="${db.user}" />
		<property name="password" value="${db.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${db.initialsize}" />
		<property name="minIdle" value="${db.minidle}" />
		<property name="maxActive" value="${db.maxactive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${db.maxwait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      	<property name="timeBetweenEvictionRunsMillis" value="60000" />
      	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      	<property name="minEvictableIdleTimeMillis" value="300000" />
      	<property name="validationQuery" value="select 1 from dual" />
		<property name="testWhileIdle" value="true" />
      	<property name="testOnBorrow" value="false" />
      	<property name="testOnReturn" value="false" />
      	
      	<property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
    	<property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟,30分钟未关闭，强制收回 -->
    	<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
      	
      	<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      	<property name="poolPreparedStatements" value="true" />
      	<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
      	<property name="proxyFilters">
	        <list>
	            <ref bean="stat-filter" />
	            <ref bean="slf4j-filter" />
	             <!-- <ref bean="wall-filter"/> -->
	        </list>
	    </property>
	</bean>
	
	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
      <property name="dbType" value="oracle" />
 	</bean>
	
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
	    <property name="mergeSql" value="true" />
	</bean>
	<!--打印完整的sql  -->
	<bean id="slf4j-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
	    <property name="resultSetLogEnabled" value="false" />
	    <property name="statementExecutableSqlLogEnable" value="true" />
	    <property name="statementLogEnabled" value="false"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

	<context:component-scan base-package="com.whty.*.service" />
   
    <!-- 以 @Transactional 标注来定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>  
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:mybatis/*.xml</value>
			</list>
		</property>
		<property name="typeAliasesPackage" value="com.whty.*.model" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							<!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
        					<!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
							reasonable=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.whty.*.mapper" />
    </bean>
	
	
</beans>
